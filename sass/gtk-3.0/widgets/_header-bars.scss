// /***************
//  * Header bars *
//  ***************/

.titlebar,
headerbar {
  min-height: 28px;
  background-color: $headerbar_color;
  background-clip: border-box;
  color: $headerbar_fg_color;

  &:backdrop label { color: $backdrop_selected_fg_color; }

  // hide all outlines
  * {
    outline-style: none;
    outline-width: 0;
    outline-color: transparent;
  }

  // titles
  .title {
    padding: 0 12px;
    color: $headerbar_fg_color;
    font-weight: 700;
    &:backdrop { @extend .dim-label; }
  }

  .subtitle {
    @extend .dim-label;
    padding: 0 12px;
    color: $headerbar_fg_color;
    &:backdrop { @extend .dim-label; }
  }

  // separators
  separator.vertical,
  > box > separator.vertical,
  > box > box > separator.vertical {
    border: 0 none transparent;
    color: transparent;
    background-color: transparent;
  }

  %linked-header {
    border: none;
    border-radius: 0;
    border-right-style: none;
    box-shadow: none;

    &:first-child {
      border-top-left-radius: 0px;
      border-bottom-left-radius: 0px;
    }

    &:last-child {
      border-top-right-radius: 0px;
      border-bottom-right-radius: 0px;
      border-right-style: solid;
    }

    &:only-child {
      border-radius: 0px;
      border-style: solid;
    }
  }

  switch {
    background-color: mix($headerbar_color, $headerbar_fg_color, 60%);
    &:backdrop { background-color: mix($headerbar_color, $headerbar_fg_color, 60%); }

    &:disabled { background-color: mix($headerbar_color, $headerbar_fg_color, 90%); }
    &:backdrop {
      &:disabled { background-color: mix($headerbar_color, $headerbar_fg_color, 90%); }
    }
    slider {
      background-color: $headerbar_color;
      &:disabled { background-color: $headerbar_color; }
      &:backdrop {
        &:disabled { background-color: $headerbar_color; }
      }
    }
  }

  entry {
    background-color: if($subtheme == 'azure', #39465c, #505359);
    color: $headerbar_fg_color;
    caret-color: $headerbar_fg_color;
    @include _shadows($depth3);
    &:backdrop,
    &:disabled {
      background-color: lighten(if($subtheme == 'azure', #39465c, #505359), 1%);
      color: $headerbar_fg_color;
      @include _shadows($depth3);
    }
  }

  button {
    @include button(normal-header);
    min-height: 30px;

    &:hover,
    &:active,
    &:checked {
      @include button(hover-header);
    }

    &:backdrop,
    &:disabled,
    &:backdrop:disabled {
      @include button(backdrop-header,transparent,transparentize(white,0.5));
      label { color: transparentize(white, 0.5); }
    }

    &:backdrop {
      &:hover,
      &:active,
      &:checked {
        @include button(hover-header,transparent,transparentize(white,0.5));
      }
    }

    &.image-button { border-radius: 0px; }

    @each $b_type, $b_color in (suggested-action, $cyan),
                               (destructive-action, $destructive_color) {
      &.#{$b_type} {
        font-weight: 700;
        min-height: 24px;
        margin-top: 4px;
        margin-bottom: 4px;
        border-radius: 2px;
        @include button(normal, $b_color, white);

        &:hover {
          @include button(hover, $b_color, white);
          &:backdrop {
            label { color: transparentize(white, 0.5); }
          }
        }

        &:active { @include button(active, $b_color, white); }

        &:disabled {
          @include button(insensitive, $b_color, white);
          label { color: transparentize(white,0.5); }
        }

        &:backdrop {
          @include button(backdrop, $b_color, white);
          label { color: $backdrop_headerbar_fg_color; }
        }

        &:backdrop:disabled { @include button(backdrop-insensitive, $b_color, white); }

      }
    }

    //Reset style
    &.titlebutton {
      box-shadow: none;

      &:hover,
      &:active,
      &:checked,
      &:backdrop,
      &:backdrop:hover,* {
        box-shadow: none;
      }
    }
  }
  .linked > button,
  .linked > button:hover,
  .linked > button:active,
  .linked > button:checked,
  .linked > button:backdrop { @extend %linked-header; }

  .linked > button:hover,
  .linked > button:active,
  .linked > button:checked {
    @include lines(up);
  }
  // End reset style

  &.selection-mode {
    $_hc: mix($top_highlight,$selected_bg_color, 50%); // highlight color

    color: $selected_fg_color;
    text-shadow: 0 -1px transparentize(black, 0.5);
    border-color: $selected_borders_color;

    @include headerbar_fill($selected_bg_color, $_hc);

    &:backdrop {
      background-color: $selected_bg_color;
      background-image: none;
      box-shadow: inset 0 1px mix($top_highlight, $selected_bg_color, 60%);
    }

    .subtitle:link { @extend *:link:selected;  }

    button {
      @include button(normal, $selected_bg_color, $selected_fg_color);

      &.flat { @include button(undecorated); }

      &.image-button { border-radius: 0px; }

      &:hover { @include button(hover, $selected_bg_color, $selected_fg_color); }

      &:active,
      &:checked { @include button(active, $selected_bg_color, $selected_fg_color); }

      &:backdrop {
        &.flat, & {
          @include button(backdrop, $selected_bg_color, $selected_fg_color);

          -gtk-icon-effect: none;
          border-color: $selected_borders_color;

          &:active,
          &:checked {
            @include button(backdrop-active, $selected_bg_color, $selected_fg_color);

            border-color: $selected_borders_color;
          }

          &:disabled {
            @include button(backdrop-insensitive, $selected_bg_color, $selected_fg_color);

            border-color: $selected_borders_color;

            &:active, &:checked {
              @include button(backdrop-insensitive-active, $selected_bg_color, $selected_fg_color);

              border-color: $selected_borders_color;
            }
          }
        }
      }

      &.flat { &:backdrop, &:disabled, &:backdrop:disabled { @include button(undecorated); }}

      &:disabled {
        @include button(insensitive, $selected_bg_color, $selected_fg_color);

        &:active,
        &:checked { @include button(insensitive-active, $selected_bg_color, $selected_fg_color); }
      }

      &.suggested-action {
        @include button(normal, $cyan, white);

        &:hover { @include button(hover, $cyan, white); }

        &:active { @include button(active, $cyan, white); }

        &:disabled { @include button(insensitive, $cyan, white); }

        &:backdrop { @include button(backdrop, $cyan, white); }

        &:backdrop:disabled { @include button(backdrop-insensitive, $cyan, white); }
      }
    }

    .selection-menu {
      &:backdrop, & {
        border-color: transparentize($selected_bg_color, 1);
        background-color: transparentize($selected_bg_color, 1);
        box-shadow: none;
        padding-left: 10px;
        padding-right: 10px;

        GtkArrow { -GtkArrow-arrow-scaling: 1; }

        .arrow {
          -gtk-icon-source: -gtk-icontheme('pan-down-symbolic');
          color: transparentize($selected_fg_color,0.5);
          -gtk-icon-shadow: none;
        }
      }
    }
  }

  // misc
  .tiled &,
  .tiled-top &,
  .tiled-bottom &,
  .tiled-left &,
  .tiled-right &,
  .maximized &,
  .fullscreen & {
    border-top-color: $headerbar_color;
    border-radius: 0;
  }

  &.default-decoration {
    padding: 0 10px; // override scaling-unit
    border-radius: 2px 2px 0 0;
    border-width: 0;

    .title { // fade_effect doesn't work
      color: $headerbar_fg_color;
      &:backdrop { color: gtkopacity($headerbar_fg_color, 0.4); }
    }
  }

  .solid-csd & {
    &:dir(rtl), &:dir(ltr) { // specificity bump
      border-radius: 0;
    }
  }
}

headerbar {
  padding-left: 10px;
  padding-right: 10px;

  // To avoid double-padding, set it only for titlebar in case it
  // is placed on the header-bar.
  &.titlebar,
  .csd &,
  .solid-csd &,
  box &:only-child {
    padding: 0 rem(5.3px); // only add lateral spacer
    // draw hilight and shadows
    box-shadow: if( $variant == 'light',$header-depth-light,$header-depth-dark);
  }

  // override unwanted side-borders
  box &:not(:only-child):first-child,
  box &:not(:only-child):last-child {
    border-left-color: $headerbar_color;
    border-right-color: $headerbar_color;
  }

  box & { // Remove unneeded side shadows with dirty hacks
    &:not(:only-child):last-child {
      &:dir(ltr) {

      }
      &:dir(rtl) {

      }
    }
  }

  // paned-separator is actually drawn by paned itself
  paned &:not(:only-child):last-child {
    &:dir(ltr) {
      // border-left: 1px solid $solid_dark_borders_color;
    }
    &:dir(rtl) {
      // border-right: 1px solid $solid_dark_borders_color;
    }
  }
}

headerbar.selection-mode { // selection-mode specific
  box & { // Remove unneeded side shadows with dirty hacks
    &:not(:only-child):last-child {
      &:dir(ltr) {

      }
      &:dir(rtl) {

      }
    }
  }
}

.background:not(.maximized):not(.fullscreen):not(.tiled):not(.solid-csd) {
  headerbar,
  .titlebar { // set rounded corners
    border-top-left-radius: 2px;
    border-top-right-radius: 2px;
  }

  box headerbar {
    &:not(:last-child) {
      &:dir(ltr) {
        border-top-left-radius: 2px;
        border-top-right-radius: 0;
      }
      &:dir(rtl) {
        border-top-left-radius: 0;
        border-top-right-radius: 2px;
      }
    }

    &:last-child {
      &:dir(ltr) { border-top-left-radius: 0; }
      &:dir(rtl) { border-top-right-radius: 0; }
    }
  }
}

// force using rounded corners in case of paned titlebars
window:not(.maximized):not(.fullscreen):not(.tiled):not(.solid-csd) {
  paned.titlebar,
  grid.titlebar {
    border-top-left-radius: 2px;
    border-top-right-radius: 2px;

    > headerbar:not(:last-child) {
      &:dir(ltr) {
        border-top-left-radius: 2px;
        border-top-right-radius: 0;
      }
      &:dir(rtl) {
        border-top-left-radius: 0;
        border-top-right-radius: 2px;
      }
    }
    > headerbar:last-child {
      &:dir(ltr) {
        border-top-left-radius: 0;
        border-top-right-radius: 2px;
      }
      &:dir(rtl) {
        border-top-left-radius: 2px;
        border-top-right-radius: 0;
      }
    }
  }
}

// revive top-edge highlight border for SSDs
.ssd {
  decoration .titlebar,
  .titlebar {
    border-width: 1px 0 0 0;
    border-style: solid;
    border-color: $top_highlight;
    box-shadow: none;
  }
}

// revive top-edge highlight border for Metacity's CSDs
headerbar.titlebar.default-decoration {
  border-top: 1px solid $top_highlight;
  box-shadow: none; // reset outset shadows

  .tiled &,
  .maximized & {
    border-top-color: $headerbar_color;
    border-radius: 0;
  }
}

// workaround for ugly Ubuntu-related CSD patches
.background:not(.csd):not(.ssd):not(.solid-csd) {
  box headerbar,
  headerbar {
    &, &:not(:last-child) {
      padding: 0 rem(5.3px); // only add lateral spacer
      border-radius: 0;
      border-top: 0 none transparent;
      box-shadow: none;

      // unset fade-effect
      *:backdrop { opacity: 1.0; }
    }
  }

  &.tiled,
  &.maximized,
  &.fullscreen {
    box headerbar,
    headerbar {
      &, &:not(:last-child) {
        border-top: 0 none transparent;
        background-color: $headerbar_color;
        box-shadow: none;
      }
    }
  }
}
