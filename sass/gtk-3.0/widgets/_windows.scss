/**********************
 * Window Decorations *
 *********************/
decoration {
  // this needs to be transparent
  // see bug #722563
  $_wm_border: if($variant=='light', transparentize(black, 0.77), transparentize($borders_color, 0.1));
  $_wm_border_backdrop: if($variant=='light', transparentize(black, 0.82), transparentize($borders_color, 0.1));

  border-radius: 2px;

  // lamefun trick to get rounded borders regardless of CSD use
  border-width: 0px;

  box-shadow: 0 2px 4px 2px transparentize(black, 0.8);

  // FIXME rationalize shadows

  // this is used for the resize cursor area
  margin: 10px;

  &:backdrop {
    // the transparent shadow here is to enforce that the shadow extents don't
    // change when we go to backdrop, to prevent jumping windows.
    // The biggest shadow should be in the same order then in the active state
    // or the jumping will happen during the transition.
    box-shadow: 0 2px 4px 2px transparentize(black, 0.85);
    transition: $backdrop_transition;
  }

  .popup & { box-shadow: none; }

  // server-side decorations as used by mutter
  .ssd & { } //just doing borders, wm draws actual shadows

  .csd.popup & {
    border-radius: 2px;
    box-shadow: 0 1px 2px transparentize(black, 0.8),
                0 0 0 1px transparentize($_wm_border,0.1);
  }

  tooltip.csd & {
    border-radius: 0;
    box-shadow: none;
  }

  messagedialog.csd & {
    border-radius: 2px;
    box-shadow: 0 1px 2px transparentize(black, 0.8),
                0 0 0 1px transparentize($_wm_border,0.1);
  }

  .solid-csd & {
    border-radius: 0;
    margin: 4px;
    background-color: $backdrop_bg_color;
    border: solid 1px $backdrop_borders_color;
    box-shadow: none;
  }
}

// Window Close button
button.titlebutton {
  padding: 1px;
  min-width: 16px;
  min-height: 16px;
  margin: 5px 3px;
  box-shadow: none;

  &.close,
  &.maximize,
  &.minimize {
    color: $headerbar_color;
    background-color: transparentize(white , 0.7);
    border-radius: 50px;
    box-shadow: $depth;
    padding: 1px;
    min-width: 16px;
    min-height: 16px;
    margin: 5px 3px;

    &:hover,
    &:active,
    &:checked,
    &:backdrop,
    &:disabled,
    &:backdrop:disabled {
      color: $headerbar_color;
      border-radius: 50px;
    }

    &:hover,
    &:active,
    &:checked { box-shadow: $depth2; }

    &:backdrop,
    &:disabled,
    &:backdrop:disabled {
      background-color: transparentize(white , 0.7);
      box-shadow: $depth;
    }
  }

  &.close {
    &:hover { background-color: lighten($red, 10%); }
    &:active { background-color: $red; }
  }
  &.maximize {
    &:hover { background-color: $purple; }
    &:active { background-color: darken($purple, 10%); }
  }
  &.minimize {
    &:hover { background-color: $cyan; }
    &:active { background-color: darken($cyan, 10%); }
  }


  .selection-mode & {
    @extend %button.flat.suggested-action;

    @extend %nobg_selected_items;
  }

  &:backdrop { -gtk-icon-shadow: none; }
}

headerbar.selection-mode button.titlebutton,
.titlebar.selection-mode button.titlebutton {
  @include _button_text_shadow(white, $selected_bg_color);

  &:backdrop { -gtk-icon-shadow: none; }
}


// catch all extend :)

%selected_items {
  background-color: $selected_bg_color;

  @at-root %nobg_selected_items, & {
    color: $selected_fg_color;

    @if $variant == 'light' { outline-color: transparentize($selected_fg_color, 0.7); }

    &:disabled { color: mix($selected_fg_color, $selected_bg_color, 50%); }

    &:backdrop {
      color: $backdrop_selected_fg_color;

      &:disabled { color: mix($backdrop_selected_fg_color, $selected_bg_color, 30%); }
    }
  }
}

.monospace { font-family: monospace; }
