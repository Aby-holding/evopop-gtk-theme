/***********
 * Buttons *
 ***********/
%button,
button {
  @at-root %button_basic, & {

    min-height: 20px;
    min-width: 20px;
    padding: 7px;
    border: 1px solid $borders_color;
    border-radius: 3px;
    transition: $button_transition;

    @include button(normal,$base_color);

    &.flat {
      @include button(undecorated);
      // to avoid adiacent buttons borders clashing when transitioning, the transition on the normal state is set
      // to none, while it's added back in the hover state, so the button decoration will fade in on hover, but
      // it won't fade out when the pointer leave the button allocation area. To make the transition more evident
      // in this case the duration is increased.
      transition: none;

      &:hover {
        transition: $button_transition;
        transition-duration: 500ms;

        &:active { transition: $button_transition; }
      }
    }

    &:hover {
      @include button(hover,$selected_bg_color,$selected_fg_color);
    }

    &:active,
    &:checked {
      @include button(active,darken($selected_bg_color,5%),$selected_fg_color);

      transition-duration: 50ms;
    }

    &:disabled {
      @include button(disabled);
      &:active,
      &:checked {
        @include button(disabled-active);

        transition-duration: 50ms;
      }
    }

    &:backdrop {
      &.flat, & {
        @include button(backdrop,$backdrop_base_color);

        transition: $backdrop_transition;
        -gtk-icon-effect: none;

        &:active,
        &:checked { @include button(backdrop-active,$backdrop_selected_bg_color); }

        &:disabled {
          @include button(backdrop-disabled);

          &:active,
          &:checked { @include button(backdrop-disabled-active); }
        }
      }
    }

    &.flat { &:backdrop, &:disabled, &:backdrop:disabled { @include button(undecorated); }}

    &:disabled {
      @include button(insensitive);

      &:active,
      &:checked { @include button(insensitive-active); }
    }

    &.image-button {
      padding: 4px;
    }

    &.text-button {
      padding-left: 16px;
      padding-right: 16px;
    }

    &.text-button.image-button {
      padding-left: 8px;
      padding-right: 8px;

      label {
        padding-left: 8px;
        padding-right: 8px;
      }
    }

    &:drop(active) {
      color: $drop_target_color;
      border-color: $drop_target_color;
      box-shadow: inset 0 0 0 1px $drop_target_color;
    }
  }

  @at-root %button_selected, & {
    row:selected & {
      @if $variant == 'light' { border-color: $selected_borders_color; }

      &.flat:not(:active):not(:checked):not(:hover):not(disabled) {
        color: $selected_fg_color;
        border-color: transparent;

        &:backdrop { color: if($variant=='light', $backdrop_base_color, $backdrop_fg_color); }
      }
    }
  }


  // Standalone Buttons
  &.osd {

    color: $osd_fg_color;
    border-radius: 5px;
    outline-color: transparentize($osd_fg_color, 0.7);  //FIXME: define a color var?

    @include button(osd);

    border: none;
    box-shadow: none;

    &:hover {
      @include button(osd-hover);

      border: none;
      box-shadow: none;
    }

    &:active,
    &:checked {
      @include button(osd-active);

      border: none;
      box-shadow: none;
    }

    &:disabled {
      &:backdrop, & {
        @include button(osd-insensitive);

        border: none;
      }
    }

    &:backdrop {
      @include button(osd-backdrop);

      border: none;
    }
  }

  //overlay / OSD style
  @at-root %osd_button,
  .osd & {
    @include button(osd);

    &:hover { @include button(osd-hover); }

    &:active,
    &:checked { &:backdrop, & { @include button(osd-active); }}

    &:disabled { &:backdrop, & { @include button(osd-insensitive); }}

    &:backdrop { @include button(osd-backdrop); }

    &.flat {
      @include button(undecorated);

      box-shadow: none; //FIXME respect no edge on the button mixin
      text-shadow: 0 1px black;
      -gtk-icon-shadow: 0 1px black;

      &:hover { @include button(osd-hover); }

      &:disabled {
        @include button(osd-insensitive);
        background-image: none;
        border-color: transparent;
        box-shadow: none;
      }

      &:backdrop { @include button(undecorated); }

      &:active,
      &:checked { @include button(osd-active); }
    }
  }

  // Suggested and Destructive Action buttons
  @each $b_type, $b_color in (suggested-action, $cyan),
                             (destructive-action, $destructive_color) {
    &.#{$b_type} {
      @include button(normal, $b_color, white);
      box-shadow: inset 0px -1px 0px 0px rgba(0,0,0,0.2),inset 0px 1px 0px 0px rgba(255,255,255,0.2);

      &.flat {
        @include button(undecorated);

        color: $b_color; //FIXME: does it work on the dark variant?
      }

      &:hover { @include button(hover, $b_color, white); }
      box-shadow: inset 0px -1px 0px 0px rgba(0,0,0,0.2),inset 0px 1px 0px 0px rgba(255,255,255,0.2);

      &:active,
      &:checked { @include button(active, $b_color, white); }

      &:backdrop,
      &.flat:backdrop {
        @include button(backdrop, $b_color, white);

        &:active,
        &:checked { @include button(backdrop-active, $b_color, white); }

        &:disabled {
          @include button(backdrop-insensitive);

          &:active,
          &:checked { @include button(backdrop-insensitive-active, $b_color, white); }
        }
      }

      &.flat {
        &:backdrop, &:disabled, &:backdrop:disabled {
          @include button(undecorated);

          color: transparentize($b_color, 0.2);
        }
      }

      &:disabled {
        @include button(insensitive);

        &:active,
        &:checked { @include button(insensitive-active, $b_color, white); }
      }

      .osd & {
        @include button(osd, $b_color);

        &:hover { @include button(osd-hover, $b_color); }

        &:active,
        &:checked { &:backdrop, & { @include button(osd-active, $b_color); }}

        &:disabled { &:backdrop, & { @include button(osd-insensitive, $b_color); }}

        &:backdrop { @include button(osd-backdrop, $b_color); }
      }
    }
  }

  .stack-switcher > & {
    // to position the needs attention dot, padding is added to the button
    // child, a label needs just lateral padding while an icon needs vertical
    // padding added too.

    outline-offset: -3px; // needs to be set or it gets overriden by GtkRadioButton outline-offset

    > label {
      padding-left: 6px;  // label padding
      padding-right: 6px; //
    }

    > image {
      padding-left: 6px;   // image padding
      padding-right: 6px;  //
      padding-top: 3px;    //
      padding-bottom: 3px; //
    }

    &.text-button {
      // compensate text-button paddings
      padding-left: 10px;
      padding-right: 10px;
    }

    &.image-button {
      // we want image buttons to have a 1:1 aspect ratio, so compensation
      // of the padding added to the GtkImage is needed
      padding-left: 2px;
      padding-right: 2px;
    }
  }

  //inline-toolbar buttons
  .inline-toolbar &, .inline-toolbar &:backdrop {
    border-radius: 2px;
    border-width: 1px;
  }

  .primary-toolbar & { -gtk-icon-shadow: none; } // tango icons don't need shadows

// all the following is for the +|- buttons on inline toolbars, that way
// should really be deprecated...
.inline-toolbar toolbutton > button { // redefining the button look is
                                      // needed since those are flat...
  @include button(normal);

  &:hover { @include button(hover); }

  &:active,
  &:checked{ @include button(active); }

  &:disabled {
    @include button(insensitive);

    &:active,
    &:checked { @include button(insensitive-active); }
  }

  &:backdrop {
    @include button(backdrop);

    &:active,
    &:checked { @include button(backdrop-active); }

    &:disabled {
      @include button(backdrop-insensitive);

      &:active,
      &:checked { @include button(backdrop-insensitive-active); }
    }
  }
}

%undecorated_button {
  background-color: transparent;
  background-image: none;
  border-color: transparent;
  box-shadow: inset 0 1px transparentize(white,1),
              0 1px transparentize(white, 1);
  text-shadow: none;
  -gtk-icon-shadow: none;
}
}

/****************
* Linked Buttons *
*****************/
.linked {

  & button {
    box-shadow: inset 0px 1px 0px 0px rgba(255,255,255,0.2);
  }
  /* middle button */
  & entry,
  & button,
  > combobox button:dir(ltr),
  > combobox button:dir(ltr):focus {
    margin: 0;
    border-radius: 0;
    border: 1px solid transparentize(black,0.85);
    border-left-width: 0;

    &:focus,
    &:active,
    &:insensitive {
      border-radius: 0;
    }
  }


  /* leftmost button */
  & entry:first-child,
  & button:first-child,
  & button:active:first-child,
  & button:focus:first-child,
  & button:disabled:first-child,
  & > combobox:first-child button,
  & > combobox:first-child button:focus {
      border-radius: 3px;
      border-left-width: 1px;
      border-top-right-radius: 0;
      border-bottom-right-radius: 0;
  }

  /* rightmost button */
  & button:last-child,
  & button:active:last-child,
  & button:focus:last-child,
  & button:disabled:last-child,
  & > combobox:last-child button,
  & > combobox:last-child button:focus {
      border-radius: 3px;
      border-bottom-left-radius: 0;
      border-top-left-radius: 0;
  }
  & entry:last-child {
      border-left-width: 0;
      border-radius: 3px;
      border-bottom-left-radius: 0;
      border-top-left-radius: 0;
  }

  /* linked single button */
  & entry:only-child,
  & button:only-child,
  & button:active:only-child,
  & button:focus:only-child,
  & button:disabled:only-child,
  & > combobox:only-child button,
  & > combobox:only-child button:focus {
      border-radius: 3px;
  }

  /* middle button (vertical) */
  &.vertical entry,
  &.vertical button,
  &.vertical button:active,
  &.vertical button:focus,
  &.vertical button:disabled,
  &.vertical > combobox button:dir(ltr),
  &.vertical > combobox button:dir(ltr):focus {
      border-bottom-width: 0;
      border-radius: 0;
  }

  /* leftmost button (vertical) */
  &.vertical entry:first-child,
  &.vertical button:first-child,
  &.vertical button:active:first-child,
  &.vertical button:focus:first-child,
  &.vertical button:disabled:first-child,
  &.vertical > combobox:first-child button,
  &.vertical > combobox:first-child button:focus {
      border-bottom-width: 0;
      border-radius: 3px;
      border-bottom-right-radius: 0;
      border-bottom-left-radius: 0;
  }

  /* rightmost button (vertical) */
  &.vertical entry:last-child,
  &.vertical button:last-child,
  &.vertical button:active:last-child,
  &.vertical button:focus:last-child,
  &.vertical button:disabled:last-child,
  &.vertical > combobox:last-child button,
  &.vertical > combobox:last-child button:focus {
      border-radius: 3px;
      border-top-left-radius: 0;
      border-top-right-radius: 0;
  }

  /* linked single button (vertical) */
  &.vertical entry:only-child,
  &.vertical button:only-child,
  &.vertical button:active:only-child,
  &.vertical button:focus:only-child,
  &.vertical button:disabled:only-child,
  &.vertical > combobox:only-child button,
  &.vertical > combobox:only-child button:focus {
      border-radius: 3px;
  }

  &.vertical entry:first-child {
    border: 1px solid transparentize(black,0.8);
      border-bottom-width: 0px;
  }

  &.vertical entry:last-child {
      border: 1px solid transparentize(black,0.8);
  }
}

notebook,list,view,popover {
  button {
    border: 1px solid $bg_color;

    &:backdrop,
    &:disabled {
      border-color: $backdrop_bg_color;
    }

    &:hover, &:active, &:checked {
      box-shadow: none;
      border-color: transparent;
      border-top-color: transparentize(white, 0.8);
      border-bottom-color: transparentize(black, 0.8);
    }
  }
}

.circular-button > .image-button {
    border-radius: 50%;
    padding-left: 8px;
    padding-right: 8px;
}


/* menu buttons */
modelbutton.flat,
.menuitem.button.flat {
  min-height: 26px;
  padding-left: 5px;
  padding-right: 5px;
  border-radius: 3px;
  outline-offset: -2px;

  &:hover {
    background-color: darken($base_color,10%);
  }

  &:selected {
    background-color: darken($selected_bg_color,5%);
    color: $selected_fg_color;
  }
}

modelbutton.flat arrow {
  background: none;

  &:hover { background: none; }

  &.left { -gtk-icon-source: -gtk-icontheme("pan-start-symbolic"); }

  &.right { -gtk-icon-source: -gtk-icontheme("pan-end-symbolic"); }
}
