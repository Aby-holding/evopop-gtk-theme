/*********
* Budgie *
*********/

$alert_color: $red;
$button_bg: transparent;
$entry_border: transparent;
$mpris_overlay_fg: fg_color;
$mpris_overlay_bg: transparentize(if($variant=='light',$base_color, darken($bg_color, 10%)), 0.1);
$mpris_overlay_border: $borders_color;
$panel_bg: transparentize( darken($headerbar_color,10%),0.05);
$panel_border: transparentize(darken($headerbar_color, 7%), 0.08);
$panel_shadow: transparentize(black, 0.7);
$raven_bg: transparentize($bg_color, 0.08);
$raven_expander_border: $borders_color;
$raven_border: transparentize($bg_color, 0.08);
$raven_expander_bg: transparentize($bg_color, 0.8);
$raven_background_bg: transparent;
$raven_background_border: transparent;

@function gtkalpha($c,$a) {
    @return unquote("alpha(#{$c},#{$a})");
}

$roundness: 2px;
$border_width: 1px;
$pos_list: ((top, bottom),(bottom,top),(left,right),(right,left));

// Used to reset all style properties set by the gtk theme
%reset_style,
popover list,
popover row,
.budgie-popover list,
.budgie-popover row {
    background: none;
    border: none;
    box-shadow: none;
    text-shadow: none;
    -gtk-icon-shadow: none;
    padding: 0;
    margin: 0;
    opacity: 1;
    min-width: 0;
    min-height: 0;
}

%reset_style,
 menubar {
    menuitem {
        padding: 4px 8px;
        border: solid transparent;
        border-width: 0;
        }

    menuitem:hover {
        background-color: $selected_bg_color;
        color: $fg_color;
        }

    menuitem:disabled {
        color: rgba(207, 218, 231, 0.2);
        border-color: transparent;
        }

    menuitem label {
        background: none;
        color: $fg_color;
        }
    }

// Container for both the "panel" area and the shadow. Wise to keep
// this transparent..
.budgie-container {
  background-color: transparent;
  &:backdrop { background-color: transparent; }
}

.budgie-popover,
.budgie-popover.background {
    border-radius: 2px;
    background-color: transparentize($popover_bg_color,0.04);
    background-clip: border-box;
    box-shadow: 0 2px 3px 1px transparentize(black, 0.65);
    border: 1px solid #{"@borders"};
}

.budgie-popover .container,
.budgie-popover .container > border {
    @extend %reset_style;
}

.budgie-popover > .container {
    padding: 2px;
}

// Budgie Menu
.budgie-menu {
    .container { padding: 0; }

    button:hover { -gtk-icon-effect: none; }

    entry.search {
        @extend %reset_style;

        padding: 10px 5px;
        border-bottom: 1px solid #{"@borders"};
        border-radius: 0;
        font-size: 120%;

        image {
            color: currentColor;

            &:dir(ltr) { padding-left: 8px; padding-right: 12px; }
            &:dir(rtl) { padding-left: 12px; padding-right: 8px; }
        }
    }

    .categories {
        border-width: 0;
        margin-left: 3px;

        &:dir(ltr) { border-right: 1px solid #{"@borders"}; }
        &:dir(rtl) { border-left: 1px solid #{"@borders"}; }
    }

    .category-button {
        @extend %reset_style;

        padding: 8px;
        border-radius: 2px 0 0 2px;

        &:hover {
          background-color: if(variant == light, transparentize($fg_color, 0.9), transparentize($fg_color, 0.95));
          color: $fg_color;
        }
        &:active { box-shadow: inset 0 2px 2px -2px transparentize(black, 0.8); }
        &:checked {
          color: $selected_fg_color;
          background-color: transparentize( darken($selected_bg_color,5%),0.2);
        }
        &:checked:disabled {
            opacity: 0.5;

            label { color: inherit; }
        }
    }

    scrollbar {
      background-color: transparent;
      border-color: transparent;
    }

    button:not(.category-button) { padding-top: 5px; padding-bottom: 5px; }

    undershoot, overshoot { background: none; }
}

// Menu Button
button.budgie-menu-launcher {
    padding: 0 2px;
    color: transparentize($headerbar_fg_color,0.2);
    background-color: rgba(0,0,0,0.3);
    box-shadow: none;
    &:hover { color: $headerbar_fg_color; }
    &:active, &:checked { color: $headerbar_fg_color; }

    &:backdrop {
      color: transparentize($headerbar_fg_color,0.2);
      background-color: rgba(0,0,0,0.3);
      &:hover { color: $headerbar_fg_color; }
      &:active, &:checked {
        color: $selected_bg_color;
        background-color: rgba(0,0,0,0.3);
        box-shadow: none;
      }
    }
}

// User Menu
.user-menu {
    .content-box separator {
        background-color: #{"alpha(@theme_fg_color, 0.15)"};
    }

    .container {
        padding: 8px;
    }
}

// Raven Trigger
button.raven-trigger {
    padding-left: 2px;
    padding-right: 2px;
    color: $selected_fg_color;
    box-shadow: none;
    &:hover { background-color: transparent; }
    &:active, &:checked {
      box-shadow: none;
      background-color: transparent;
    }
}

// Places Menu
.places-menu {
    .container { padding: 0; }

    .message-bar {
        border-top-left-radius: 3px;
        border-top-right-radius: 3px;
    }

    .name-button {
        border: 0;
        border-radius: 0;
        padding: 4px 6px;
    }

    .unmount-button {
        padding: 4px 4px;
        border: 0;
        border-radius: 0;
    }

    .places-section-header {
        padding: 0px;
        border-bottom: 1px solid $raven_expander_border;
        box-shadow: 0px 1px 1px #{"alpha(@theme_fg_color, 0.03)"};
    }

    .places-section-header > button {
        padding: 8px;
        border: none;
        border-bottom-left-radius: 0px;
        border-bottom-right-radius: 0px;
    }

    .places-list {
        background: transparentize($fg_color, 0.96);
        border-bottom: 1px solid $raven_expander_border;
    }

    list,
    row {
        padding: 0;
        margin: 0;
    }

    .unlock-area {
        border-top: 1px solid transparentize($raven_expander_border, 0.1);
        border-bottom: 1px solid transparentize($raven_expander_border, 0.1);
    }

    .unlock-area entry {
        border-radius: 0;
        border: 0;
    }

    .unlock-area button {
        border-radius: 0;
        border: 0;
        border-left: 1px solid transparentize($raven_expander_border, 0.1);
    }

    .alternative-label {
        font-size: 15px;
        padding: 3px;
    }

    .always-expand {
        background: transparent;
        border-bottom: none;
    }
}

// Night Light indicator
.night-light-indicator {
    .container { padding: 0; }

    .view-header {
        font-size: 14px;
        padding: 10px;
        border-bottom: #{"1px solid mix(@theme_base_color, #000000, 0.35);"};
        box-shadow: #{"0px 1px 1px alpha(@theme_fg_color, 0.04);"};
    }

    .display-settings-button {
        border-top-left-radius: 0px;
        border-top-right-radius: 0px;
        border: none;
        padding: 3px;
        border-top: #{"1px solid mix(@theme_base_color, #000000, 0.35);"};
        box-shadow: #{"inset 0px 1px 1px alpha(@theme_fg_color, 0.04);"};
    }
}

// Panel
.budgie-panel {
    color: $headerbar_fg_color;
    background-color: $panel_bg;
    background-image: none;
    box-shadow: none;
    border: none;
    transition: all 150ms ease-in;

    .alert { color: $alert_color; }

    &:backdrop {
      color: $headerbar_fg_color;
      background-color: $panel_bg;
    }

    button {
      border-top-width: 0;
      border-bottom-width: 0;
      border-radius: 0;
    }

    &.transparent {
        background-color: transparent;

        .top & {
            border-bottom-color: transparent;
        }

        .bottom & {
            border-top-color: transparent;
        }

        .left & {
            border-right-color: transparent;
        }

        .right & {
            border-left-color: transparent;
        }
    }

    .end-region {
      background-color: rgba(0,0,0,0.3);
      border-radius: 0px;
      separator { background-color: transparentize($headerbar_fg_color, 0.85); }
      label {
        font-weight: 700;
        color: $headerbar_fg_color;
      }
    }
}

// Tasklist
.budgie-panel #tasklist-button,
.budgie-panel #tasklist-button:backdrop {

    border-radius: 0;
    outline-color: transparent;

    @if $variant == 'default' {
        &:not(:hover):not(:active):not(:checked) { color: gtkalpha(currentColor, 0.5); }
        background: none;
        background-clip: padding-box;
        border: none;

        @extend %underscores;
    }

    &:drop(active) { box-shadow: inset 0 0 0 1px $selected_bg_color; }
}

// Icon Tasklist
.budgie-panel {

    button.flat.launcher {
        @extend %reset_style;

        outline-color: transparent;
        transition: all 100ms cubic-bezier(0.25, 0.46, 0.45, 0.94);
        border-color: transparentize($panel_bg,1); // fixes the transition
        border-radius: 0;
        padding: 0;
        background-clip: padding-box;
    }
    .unpinned button.flat.launcher,
    .pinned button.flat.launcher.running { @extend %underscores; }

    .pinned button.flat.launcher:not(.running):hover {
        background-color: transparentize(black, 0.8);
        box-shadow: inset 1px 0 transparentize(black, 0.8),
                    inset -1px 0 transparentize(black, 0.8);
    }
}

%underscores {
    &:hover { background-color: transparentize(black, 0.95); }
    &:active, &:checked { background-color: transparentize(black, 0.9); }

    @each $pos, $b_pos in $pos_list {
        .#{$pos} & {
            padding-#{$b_pos}: 2px;
            border-#{$pos}: 2px solid transparent;

            @at-root {
                .#{$pos} .budgie-panel .unpinned button.flat.launcher,
                .#{$pos} .budgie-panel .pinned button.flat.launcher.running { border-#{$pos}: 2px solid transparentize(white, 0.6); }
            }
            &:hover {
                border-#{$pos}: 2px solid transparentize(white, 0.75);
            }
            &:active, &:checked {
                border-#{$pos}: 2px solid $selected_bg_color;
            }
        }
    }
}

@each $pos, $b_pos in $pos_list {

    // Panel borders
    .#{$pos} .budgie-panel { border-#{$b_pos}: $border_width solid $panel_border; }

    // Raven borders
    .#{$pos} .raven-frame {
        padding: 0;
        background: none;

        border {
            border: none;
            border-#{$b_pos}: $border_width solid $raven_border;
        }
    }

    // Shadows
    .#{$pos} .shadow-block {
        background-color: transparent;
        background-image: linear-gradient(to $b_pos,
                                          $panel_shadow,
                                          transparent);
    }
}

// Raven
.raven {
    padding: 0;
    color: $fg_color;
    background-color: $raven_bg;
    transition: 170ms ease-out;

    .raven-header {
        * {
          padding-top: 0;
          padding-bottom: 0;
        }

        min-height: 32px;
        color: $fg_color;
        border: solid $raven_expander_border;
        border-width: 1px 0;
        background-color: $raven_expander_bg;

        &.top {
          border-top-style: none;
          border-color: transparent;
          margin-top: 3px;
          min-height: 32px;
          button.image-button {
            &:hover {
              color: darken($selected_bg_color,5%);
              box-shadow: none;
            }
          }
        }

        > button.text-button {
          border-radius: 2px;
          color: $selected_fg_color;
          background-color: transparentize(darken($red,5%), 0.1);
          @include _shadows(inset 0px 1px 0px 0px $top_highlight,inset 0px -1px 0px 0px $bottom_highlight);
          &:hover {
            border-radius: 2px;
            color: $selected_fg_color;
            background-color: transparentize($red, 0.1);
            @include _shadows(inset 0px 1px 0px 0px $top_highlight,inset 0px -1px 0px 0px $bottom_highlight);
          }
          &:active {
            color: $selected_fg_color;
            background-color: transparentize(lighten($red,5%), 0.1);
            @include _shadows(inset 0px 1px 0px 0px $top_highlight,inset 0px -1px 0px 0px $bottom_highlight);
          }
        }
        
        &.bottom { border-bottom-style: none; }
        button {
          background-color: transparent;
          color: $fg_color;
          border-radius: 0;
          border: none;
          box-shadow: none;
          margin-top: -4px;
          margin-bottom: -4px;
          min-height: 32px;

          &:hover {
            border-radius: 0;
            background-color: transparent;
            @include lines(up);
          }

          &:active,
          &:checked {
            border-radius: 0;
            background-color: transparent;
            @include lines(up);
          }

          &:disabled {
            color: $insensitive_fg_color;
          }
        }
    }

    list {
      background-color: transparent;
      &:selected { background-color: transparentize($selected_bg_color,0.1); }
      row,
      row.activatable {
        background-color: transparent;
        &:selected { background-color: transparentize($selected_bg_color,0.1); }
      }
    }

    .raven-background {
        color: $fg_color;
        background-color: transparent;
        border-color: transparent;

        &.middle { border-bottom-style: none; }  // applet background between two headers
    }

    .powerstrip { border-top-color: transparent; }

    .powerstrip button.image-button {
      border-radius:50%;
      padding: 6px;
      min-width: 32px;
      margin-bottom: 3px;
      background: if($variant=='dark', transparentize(black,0.7), transparentize(black,0.9));
      border: none;
      box-shadow: none;
      font-size: 100%;

      &:hover {
        transition: 170ms ease all;
        background: if($variant=='dark', transparentize(black,0.6), transparentize(black,0.8));
        color: $selected_fg_color;
      }
      &:active {
        transition: 170ms ease all;
        background: if($variant=='dark', transparentize(black,0.5), transparentize(black,0.7));
        color: $selected_fg_color;
      }
    }
    .option-subtitle {
        font-size: smaller;
    }
}

// Calendar
calendar.raven-calendar {
  padding: 6px;
  color: $fg_color;
  background-color: transparentize($bg_color, 0.8);
  border-color: transparent;

  &:indeterminate { color: gtkalpha(currentColor,0.3); }

  &:selected {
    color: $selected_fg_color;
    background-color: transparent;
    background-position: center top;
    background-repeat: no-repeat;
    background-size: 1.6em 1.6em;

    background-image: -gtk-scaled(url("../assets/calendar-selected.png"),
                                  url("../assets/calendar-selected@2.png"));
  }
  &.header {
    color: $fg_color;
    border: none;
    border-radius: 0;
    background-color: transparent;
  }
  & button, & button:focus {
    color: gtkalpha(currentColor,0.5);
    background-color: transparent;

    &:hover {
      color: $fg_color;
      background-color: transparent;
    }
  }
}

// MPRIS Applet
.raven-mpris {
    color: $mpris_overlay_fg;
    background-color: $mpris_overlay_bg;
    border: solid $mpris_overlay_border;
    border-width: 1px 0;

    button.image-button { padding: 8px; }
}

// Notifications
.budgie-notification-window {
    background: none;
    border-radius: 1px;
    button {
      background-color: $cyan;
      color: $selected_fg_color;
      border: none;
      &:hover {
        background-color: darken($cyan, 5%);
        border: none;
      }
      &:active, &:checked { background-color: darken($cyan, 5%); }
    }
}

.budgie-notification {
    &.background {
        border-radius: 1px;
    }
    .notification-title {
        font-size: 110%;
        color: $headerbar_fg_color;
    }
    .notification-body { color: transparentize($headerbar_fg_color, 0.3); }
    button {
      background-color: transparent;
      color: $selected_fg_color;
      &:hover {
        background-color: transparent;
        color: $red;
        box-shadow: none;
      }
      &:active, &:checked {
        background-color: transparent;
        color: darken($red, 5%);
      }
    }
}

.drop-shadow {
    color: $headerbar_fg_color;
    background-color: transparentize(if($variant=='light', $headerbar_color, $bg_color), 0.05);
    box-shadow: 0 1px 2px 0 transparentize(black, 0.8);
    border-radius: 2px;
}

// On Screen Display in Budgie
.budgie-osd-window {
    @extend .budgie-notification-window;
}

// Internal part of the OSD
.budgie-osd {
    @extend .budgie-notification;
}

// Alt+tab switcher in Budgie
.budgie-switcher-window {
    @extend .budgie-notification-window;

    // Flowbox
    flowbox { color: $fg_color; }
    flowboxchild {
        padding: 3px;
        color: $fg_color;

        &:hover { background-color: $button_bg; }
        &:active { color: $fg_color; }
        &:selected {
            color: $selected_fg_color;
            background-color: transparentize($selected_bg_color,0.2);

            &:active { color: $selected_fg_color; }
            &:hover { background-color: mix(black, $selected_bg_color, 10%); }
            &:disabled {
                color: transparentize($selected_fg_color, 0.3);
                background-color: transparentize($selected_bg_color, 0.3);
                label { color: inherit; }
            }
        }
    }
}

// Internal part of the Switcher
.budgie-switcher {
    @extend .budgie-notification;
}

// Session Dialog
.budgie-session-dialog {
    color: $headerbar_fg_color;
    background-color: $panel_bg;
    &.background { @extend .drop-shadow; }
    .dialog-title { font-size: 120%; }

    .linked.horizontal > button {
      min-height: 32px;
      border-bottom: none;
      border-radius: 0;
      color: $headerbar_fg_color;
      background-color: transparent;
      box-shadow: none;

      label { font-weight: 700; }
      &:first-child { border-left: none; border-bottom-left-radius: 2px; }
      &:last-child { border-right: none; border-bottom-right-radius: 2px; }
      &:hover {
        background-color: transparentize($selected_bg_color, 0.1);
        &:backdrop {
          label { color: transparentize(white, 0.5); }
        }
      }

      @each $b_type, $b_color in (suggested-action, $cyan),
                                 (destructive-action, $destructive_color) {
        &.#{$b_type} {
          background-color: transparentize($b_color, 0.1);
          &:hover { background-color: transparentize(lighten($b_color,5%), 0.1); }
          &:active, &:checked { background-color: transparentize(lighten($b_color,5%), 0.1); }
        }
      }
    }

    entry {
      background-color: #505359;
      color: $headerbar_fg_color;
      &:focus { background-color: #505359; }
      &:backdrop { background-color: #505359; }
    }
}

// PolKit Dialog
.budgie-polkit-dialog {
    @extend .budgie-session-dialog;

    .message { color: transparentize($headerbar_fg_color, 0.3); }
    .failure { color: $alert_color; }
}

// Run Dialog
.budgie-run-dialog {
    @extend .budgie-session-dialog;

    entry.search, entry.search:focus {
        font-size: 120%;
        padding: 8px 5px;
        border: none;
        box-shadow: none;

        image {
            &:dir(ltr) { padding-left: 8px; padding-right: 12px; }
            &:dir(rtl) { padding-left: 12px; padding-right: 8px; }
        }
    }

    list row:selected .dim-label { opacity: 1; }

    scrolledwindow { border-top: 1px solid darken($entry_border, 5%); }
}

// Budgie styled Gtk Menus
.budgie-menubar {
    menu {
        margin: 4px;
        padding: 5px;
        border-radius: 0;
        background-color: $panel_bg;
        menuitem:hover {
            background-color: $selected_bg_color;
            color: $fg_color;
            }
        }

    arrow {
        border:none;
        min-width:16px;
        min-height:16px;

        &.top {
            -gtk-icon-source:-gtk-icontheme("pan-up-symbolic");
            border-bottom: 1px solid mix($fg_color, $raven_bg, 10%);
        }

        &.bottom {
            -gtk-icon-source:-gtk-icontheme("pan-down-symbolic");
            border-top: 1px solid mix($fg_color, $raven_bg, 10%);
        }
    }

    menuitem {
        accelerator {
            color: transparentize($fg_color, 0.65);
        }

        check, radio {
            min-height: 16px;
            min-width: 16px;
        }
    }
}
